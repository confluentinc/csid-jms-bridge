bridge {

{% set bridgecfg = dict() %}
{%- set _nop =  bridgecfg.update(jms_bridge_defaults_cfg) -%}
{%- set _nop = bridgecfg.update(jms_bridge_cfg) -%}

{% set kafkacfg = dict() %}
{%- set _nop =  kafkacfg.update(jms_bridge_defaults_cfg_kafka) -%}
{%- set _nop = kafkacfg.update(jms_bridge_cfg_kafka) -%}

{% set journalcfg = dict() %}
{%- set _nop =  journalcfg.update(jms_bridge_defaults_cfg_journals) -%}
{%- set _nop = journalcfg.update(jms_bridge_cfg_journals) -%}

{% set streamcfg = dict() %}
{%- set _nop =  streamcfg.update(jms_bridge_defaults_cfg_streams) -%}
{%- set _nop = streamcfg.update(jms_bridge_cfg_streams) -%}

  {% for key, val in bridgecfg.items() %}
  {{ key }} = """{{ val }}"""
  {% endfor%}


  kafka {
    {% for key, val in kafkacfg.items() %}
    {{ key }} = """{{ val }}"""
    {% endfor%}
 }

  journals {
    {% for key, val in journalcfg.items() %}
    {{ key }} = """{{ val }}"""
    {% endfor%}
  }

  streams {
    {% for key, val in streamcfg.items() %}
    {{ key }} = """{{ val }}"""
    {% endfor%}
    state.dir = ${?BRIDGE_STREAMS_STATE_DIR}
  }

  routing {
    metadata.refresh.ms = 60000
    topics = [{
      match = "^jms-load-test.*"
    }]
  }
}
