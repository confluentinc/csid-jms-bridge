version: "2.2"

services:

    prometheus:
        image: prom/prometheus:v2.14.0
        hostname: prometheus
        container_name: prometheus
        volumes:
            - ./docker/prometheus/:/etc/prometheus/
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        ports:
            - "9090:9090"

    grafana:
        image: grafana/grafana:7.5.3
        hostname: grafana
        container_name: grafana
        volumes:
            - ./docker/grafana/provisioning:/etc/grafana/provisioning
        environment:
            - GF_RENDERING_SERVER_URL=http://renderer:8081/render
            - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
            - GF_LOG_FILTERS=rendering:debug
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_USERS_DEFAULT_THEME=light
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        ports:
            - "3000:3000"

    renderer:
        image: grafana/grafana-image-renderer:latest
        ports:
            - "8081:8081"

    grafana-reporter:
        image: izakmarais/grafana-reporter:2.3.1
        hostname: grafanareporter
        container_name: grafanareporter
        volumes:
            - ./docker/grafana-reporter/templates:/usr/local/share/grafana-reporter/templates
        command:
            - '-ip=grafana:3000'
            - '-grid-layout=1'
            - '-templates=/usr/local/share/grafana-reporter/templates/'
        ports:
            - "8686:8686"


