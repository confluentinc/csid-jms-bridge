#!/bin/bash
# (Copyright) [2017 - 2017] Confluent, Inc.

# Use shellcheck to lint this file

if [ $# -lt 1 ];
then
  echo "USAGE: $0 [-daemon] [opts]"
    exit 1
fi

MAIN="$1"
shift

DAEMON_NAME=""
GC_LOG_ENABLED=""
DAEMON_MODE=""

while [ $# -gt 0 ]; do
  COMMAND="$1"
  case "$COMMAND" in
    -name)
      DAEMON_NAME=$2
      shift 2
      ;;
    -loggc)
      GC_LOG_ENABLED="true"
      shift
      ;;
    -daemon)
      DAEMON_MODE="true"
      shift
      ;;
   *)
      break
      ;;
  esac
done

base_dir=$( cd -P "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )

# Log directory to use
if [ "x$LOG_DIR" = "x" ]; then
  LOG_DIR="$base_dir/logs"
fi

# create logs directory
if [ ! -d "$LOG_DIR" ]; then
  mkdir -p "$LOG_DIR"
fi

: "${JMS_BRIDGE_CLASSPATH:=""}"
: "${JMS_BRIDGE_LOG_OPTS:=""}"
: "${JMS_BRIDGE_JMX_OPTS:=""}"
: "${JMS_BRIDGE_OPTS:=""}"
: "${JMS_BRIDGE_HEAP_OPTS:=""}"
: "${JMS_BRIDGE_JVM_PERFORMANCE_OPTS:=""}"
: "${JMX_PORT:=""}"
: "${JAVA_HOME:=""}"

# Development jars. `mvn package` should collect all the required dependency jars here
for project in "jms-bridge"; do
    for dir in "$base_dir/$project/target/$project"-*-development; do
      JMS_BRIDGE_DIR="$dir/share/java/$project"
      if [ -d "$JMS_BRIDGE_DIR" ]; then
        JMS_BRIDGE_CLASSPATH="$JMS_BRIDGE_CLASSPATH:$JMS_BRIDGE_DIR/*"
      fi
    done
done

# Production jars - each one is prepended so they will appear in reverse order.  JMS_BRIDGE jars take precedence over other stuff passed in via CLASSPATH env var
: "${JMS_BRIDGE_LIB_DIR:="/usr/share/java/jms-bridge"}"
if [ -d "$JMS_BRIDGE_LIB_DIR" ]; then
  JMS_BRIDGE_CLASSPATH="$JMS_BRIDGE_LIB_DIR/*:$JMS_BRIDGE_CLASSPATH"
else
  DIR="$base_dir/share/java/jms-bridge"
  if [ -d "$DIR" ]; then
    JMS_BRIDGE_CLASSPATH="$DIR/*:$JMS_BRIDGE_CLASSPATH"
  fi
fi

# logj4 settings
if [ -z "$JMS_BRIDGE_LOG_OPTS" ]; then
  # Test for files from dev -> packages so this will work as expected in dev if you have packages
  # installed
  if [ -e "$base_dir/etc/jms-bridge/logback.xml" ]; then # Dev environment or Simple zip
    JMS_BRIDGE_LOG_OPTS="-Dlogback.configurationFile=file:$base_dir/etc/jms-bridge/logback.xml"
  elif [ -e "/etc/jms-bridge/logback.xml" ]; then # Normal install layout
    JMS_BRIDGE_LOG_OPTS="-Dlogback.configurationFile=file:/etc/jms-bridge/logback.xml"
  fi
fi

 JMS_BRIDGE_LOG_OPTS="-Djms-bridge.log.dir=$LOG_DIR ${JMS_BRIDGE_LOG_OPTS}"

# JMX settings
if [ -z "$JMS_BRIDGE_JMX_OPTS" ]; then
  JMS_BRIDGE_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false "
fi

# JMX port to use
if [ ! -z "$JMX_PORT" ]; then
  JMS_BRIDGE_JMX_OPTS="$JMS_BRIDGE_JMX_OPTS -Dcom.sun.management.jmxremote.port=$JMX_PORT "
fi

# Generic jvm settings you want to add
if [ -z "$JMS_BRIDGE_OPTS" ]; then
  JMS_BRIDGE_OPTS=""
fi

# Which java to use
if [ -z "$JAVA_HOME" ]; then
  JAVA="java"
else
  JAVA="$JAVA_HOME/bin/java"
fi

# Memory options
if [ -z "$JMS_BRIDGE_HEAP_OPTS" ]; then
  JMS_BRIDGE_HEAP_OPTS="-Xmx3g"
fi

# JVM performance options
if [ -z "$JMS_BRIDGE_JVM_PERFORMANCE_OPTS" ]; then
  JMS_BRIDGE_JVM_PERFORMANCE_OPTS="-server -Djava.awt.headless=true"
fi


# GC options
GC_FILE_SUFFIX='-gc.log'
GC_LOG_FILE_NAME=''
JMS_BRIDGE_GC_LOG_OPTS=""
if [ "x$GC_LOG_ENABLED" = "xtrue" ]; then
  GC_LOG_FILE_NAME=$DAEMON_NAME$GC_FILE_SUFFIX
  # The first segment of the version number, which is '1' for releases before Java 9
  # it then becomes '9', '10', ...
  # Some examples of the first line of `java --version`:
  # 8 -> java version "1.8.0_152"
  # 9.0.4 -> java version "9.0.4"
  # 10 -> java version "10" 2018-03-20
  # 10.0.1 -> java version "10.0.1" 2018-04-17
  # We need to match to the end of the line to prevent sed from printing the characters that do not match
  JAVA_MAJOR_VERSION=$($JAVA -version 2>&1 | sed -E -n 's/.* version "([0-9]*).*$/\1/p')
  if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then
    JMS_BRIDGE_GC_LOG_OPTS="-Xlog:gc*:file=$LOG_DIR/$GC_LOG_FILE_NAME:time,tags:filecount=10,filesize=102400"
  else
    JMS_BRIDGE_GC_LOG_OPTS="-Xloggc:$LOG_DIR/$GC_LOG_FILE_NAME -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M"
  fi
fi

OPTIONS=($JMS_BRIDGE_HEAP_OPTS)
OPTIONS+=($JMS_BRIDGE_JVM_PERFORMANCE_OPTS)
OPTIONS+=($JMS_BRIDGE_JMX_OPTS)
OPTIONS+=($JMS_BRIDGE_LOG_OPTS)
OPTIONS+=($JMS_BRIDGE_OPTS)
OPTIONS+=($JMS_BRIDGE_GC_LOG_OPTS)

# Launch mode
if [ "x$DAEMON_MODE" = "xtrue" ]; then
  DAEMON_STDOUT_FILE="$LOG_DIR/jms-bridge.out"
  echo "Writing console output to $DAEMON_STDOUT_FILE"
  nohup "$JAVA" -cp "$JMS_BRIDGE_CLASSPATH" "${OPTIONS[@]}" "$MAIN" "$@" 2>&1 < /dev/null > "$DAEMON_STDOUT_FILE" &
else
  exec "$JAVA" -cp "$JMS_BRIDGE_CLASSPATH" "${OPTIONS[@]}" "$MAIN" "$@"
fi